// Copyright (c) 2014 Project Iris. All rights reserved.
//
// The current language binding is an official support library of the Iris
// cloud messaging framework, and as such, the same licensing terms apply.
// For details please see http://iris.karalabe.com/downloads#License
apply from: 'build.gradle'

apply plugin: 'maven'
apply plugin: 'signing'

// Make sure dependent properties are configured
def validProperty = { String propertyName ->
    try { project.property(propertyName) != null }
    catch (MissingPropertyException ignore) { false }
}

assert validProperty('signing.keyId'),             'property for signing must be provided'
assert validProperty('signing.secretKeyRingFile'), 'property for signing must be provided'
assert validProperty('ossrhUsername'),             'property for publish must be provided'

// Ask for the PGP key password and the OSSRK user password
ext."signing.password" = new String(System.console().readPassword("\nPassword for PGP key ${property('signing.keyId')}: "))
ext.ossrhPassword      = new String(System.console().readPassword("\nPassword for OSSRH user ${ossrhUsername}@oss.sonatype.org: "))

// Sign all defined JAR archives in this configuration
signing {
    sign configurations.archives
}

// Define the artifacts to assemble
artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

// Configure the Maven Central upload task
uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'Iris: Decentralized cloud messaging'
                packaging 'jar'

                description 'Iris is an attempt at bringing the simplicity and elegance of cloud \
                computing to the application layer. Consumer clouds provide unlimited virtual \
                machines at the click of a button, but leaves it to developer to wire them \
                together. Iris ensures that you can forget about networking challenges and \
                instead focus on solving your own domain problems.\
                \
                It is a completely decentralized messaging solution for simplifying the design \
                and implementation of cloud services. Among others, Iris features zero-configuration \
                (i.e. start it up and it will do its magic), semantic addressing (i.e. application \
                use textual names to address each other), clusters as units (i.e. automatic load \
                balancing between apps of the same name) and perfect secrecy (i.e. all network traffic \
                is encrypted).'
                url 'http://iris.karalabe.com/'

                scm {
                    url 'https://github.com/project-iris/iris-java'
                    connection 'scm:git:git://github.com/project-iris/iris-java.git'
                    developerConnection 'scm:git:git@github.com:project-iris/iris-java.git'
                }

                licenses {
                    license {
                        name 'GNU General Public License, Version 3'
                        url 'http://www.gnu.org/licenses/gpl-3.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'karalabe'
                        name 'Péter Szilágyi'
                        email 'peterke@gmail.com'
                    }
                }
            }
        }
    }
}
